export const abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      { internalType: "bool", name: "isWstEth", type: "bool" },
    ],
    name: "query",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "decimals",
            type: "uint256",
          },
          { internalType: "bool", name: "hasSymbol", type: "bool" },
          { internalType: "string", name: "symbol", type: "string" },
          { internalType: "bool", name: "hasName", type: "bool" },
          { internalType: "string", name: "name", type: "string" },
          {
            internalType: "uint256",
            name: "stEthPerWstEth",
            type: "uint256",
          },
          {
            components: [
              { internalType: "string", name: "name", type: "string" },
              {
                internalType: "string",
                name: "version",
                type: "string",
              },
              {
                internalType: "address",
                name: "verifyingContract",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "chainId",
                type: "uint256",
              },
            ],
            internalType: "struct Eip712Domain",
            name: "eip712Domain",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "hasEip712Domain",
            type: "bool",
          },
        ],
        internalType: "struct TokenResponse",
        name: "res",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export const code =
  "0x608080604052346015576105b5908161001a8239f35b5f80fdfe6080806040526004361015610012575f80fd5b5f3560e01c63287861f914610025575f80fd5b3461037b57604036600319011261037b576004356001600160a01b038116919082900361037b5760243591821515830361037b57610100820182811067ffffffffffffffff82111761037f576040525f825260208201925f8452604083019160608352606084015f8152608085016060815260a08601945f865260c08701936040516100b0816104c2565b60608152606060208201525f60408201525f6060820152855260e08801955f87526040516306fdde0360e01b81525f81600481865afa5f9181610482575b50610476575b506040516395d89b4160e01b81525f81600481865afa5f9181610452575b50610446575b5060405163313ce56760e01b8152602081600481865afa5f9181610408575b506103fd575b50610393575b5f600491604051928380926342580cb760e11b82525afa905f915f815f935f93610263575b50916101c797969593916101ac959361022d575b50505050604051998a9960208b525160208b015251151560408a01525161010060608a015261012089019061049e565b91511515608088015251868203601f190160a088015261049e565b925160c08501525191601f198482030160e08501526060806102076101f5865160808652608086019061049e565b6020870151858203602087015261049e565b6040808701516001600160a01b0316908501529401519101525115156101008301520390f35b60018b526040519361023e856104c2565b845260208401526001600160a01b03166040830152606082015286525f80808061017c565b9350935050503d805f833e61027881836104de565b81019160e08284031261037b5781516001600160f81b031981160361037b57602082015167ffffffffffffffff811161037b57836102b7918401610500565b92604083015167ffffffffffffffff811161037b57816102d8918501610500565b9360608401519160808501519460018060a01b038616860361037b5760c08101519067ffffffffffffffff821161037b570181601f8201121561037b5780519067ffffffffffffffff821161037f576020808360051b936040519061033f838701836104de565b8152019282010192831161037b57602001905b82821061036b5750919592949391506101c79050610168565b8151815260209182019101610352565b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b6040516301afd7c160e11b8152602081600481855afa9081156103f2575f916103bf575b508752610143565b90506020813d6020116103ea575b816103da602093836104de565b8101031261037b575160046103b7565b3d91506103cd565b6040513d5f823e3d90fd5b60ff1689525f61013d565b9091506020813d60201161043e575b81610424602093836104de565b8101031261037b575160ff8116810361037b57905f610137565b3d9150610417565b60018b5283525f610118565b61046f9192503d805f833e61046781836104de565b810190610556565b905f610112565b6001865284525f6100f4565b6104979192503d805f833e61046781836104de565b905f6100ee565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b6080810190811067ffffffffffffffff82111761037f57604052565b90601f8019910116810190811067ffffffffffffffff82111761037f57604052565b81601f8201121561037b5780519067ffffffffffffffff821161037f5760405192610535601f8401601f1916602001856104de565b8284526020838301011161037b57815f9260208093018386015e8301015290565b9060208282031261037b57815167ffffffffffffffff811161037b5761057c9201610500565b9056fea2646970667358221220eef42094154227b11b9450292e0814cb7dc32e1b25b4a86870932aa5040d3d1564736f6c634300081b0033";
