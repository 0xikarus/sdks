export const abi = [
  {
    inputs: [
      {
        internalType: "contract IMetaMorpho",
        name: "vault",
        type: "address",
      },
      {
        internalType: "contract IPublicAllocator",
        name: "publicAllocator",
        type: "address",
      },
    ],
    name: "query",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "asset",
                type: "address",
              },
              {
                internalType: "string",
                name: "symbol",
                type: "string",
              },
              { internalType: "string", name: "name", type: "string" },
              {
                internalType: "uint256",
                name: "decimals",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "decimalsOffset",
                type: "uint256",
              },
            ],
            internalType: "struct VaultConfig",
            name: "config",
            type: "tuple",
          },
          { internalType: "address", name: "owner", type: "address" },
          { internalType: "address", name: "curator", type: "address" },
          {
            internalType: "address",
            name: "guardian",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "timelock",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint192",
                name: "value",
                type: "uint192",
              },
              {
                internalType: "uint64",
                name: "validAt",
                type: "uint64",
              },
            ],
            internalType: "struct PendingUint192",
            name: "pendingTimelock",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "value",
                type: "address",
              },
              {
                internalType: "uint64",
                name: "validAt",
                type: "uint64",
              },
            ],
            internalType: "struct PendingAddress",
            name: "pendingGuardian",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "pendingOwner",
            type: "address",
          },
          { internalType: "uint256", name: "fee", type: "uint256" },
          {
            internalType: "address",
            name: "feeRecipient",
            type: "address",
          },
          {
            internalType: "address",
            name: "skimRecipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalAssets",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastTotalAssets",
            type: "uint256",
          },
          {
            internalType: "Id[]",
            name: "supplyQueue",
            type: "bytes32[]",
          },
          {
            internalType: "Id[]",
            name: "withdrawQueue",
            type: "bytes32[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "admin",
                type: "address",
              },
              { internalType: "uint256", name: "fee", type: "uint256" },
              {
                internalType: "uint256",
                name: "accruedFee",
                type: "uint256",
              },
            ],
            internalType: "struct PublicAllocatorConfig",
            name: "publicAllocatorConfig",
            type: "tuple",
          },
        ],
        internalType: "struct VaultResponse",
        name: "res",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export const code =
  "";
