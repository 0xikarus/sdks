export const abi = [
  {
    inputs: [
      {
        internalType: "contract IMetaMorpho",
        name: "vault",
        type: "address",
      },
      {
        internalType: "contract IPublicAllocator",
        name: "publicAllocator",
        type: "address",
      },
    ],
    name: "query",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "asset",
                type: "address",
              },
              {
                internalType: "string",
                name: "symbol",
                type: "string",
              },
              { internalType: "string", name: "name", type: "string" },
              {
                internalType: "uint256",
                name: "decimals",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "decimalsOffset",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "bytes1",
                    name: "fields",
                    type: "bytes1",
                  },
                  {
                    internalType: "string",
                    name: "name",
                    type: "string",
                  },
                  {
                    internalType: "string",
                    name: "version",
                    type: "string",
                  },
                  {
                    internalType: "uint256",
                    name: "chainId",
                    type: "uint256",
                  },
                  {
                    internalType: "address",
                    name: "verifyingContract",
                    type: "address",
                  },
                  {
                    internalType: "bytes32",
                    name: "salt",
                    type: "bytes32",
                  },
                  {
                    internalType: "uint256[]",
                    name: "extensions",
                    type: "uint256[]",
                  },
                ],
                internalType: "struct Eip5267Domain",
                name: "eip5267Domain",
                type: "tuple",
              },
            ],
            internalType: "struct VaultConfig",
            name: "config",
            type: "tuple",
          },
          { internalType: "address", name: "owner", type: "address" },
          { internalType: "address", name: "curator", type: "address" },
          {
            internalType: "address",
            name: "guardian",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "timelock",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint192",
                name: "value",
                type: "uint192",
              },
              {
                internalType: "uint64",
                name: "validAt",
                type: "uint64",
              },
            ],
            internalType: "struct PendingUint192",
            name: "pendingTimelock",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "value",
                type: "address",
              },
              {
                internalType: "uint64",
                name: "validAt",
                type: "uint64",
              },
            ],
            internalType: "struct PendingAddress",
            name: "pendingGuardian",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "pendingOwner",
            type: "address",
          },
          { internalType: "uint256", name: "fee", type: "uint256" },
          {
            internalType: "address",
            name: "feeRecipient",
            type: "address",
          },
          {
            internalType: "address",
            name: "skimRecipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalAssets",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastTotalAssets",
            type: "uint256",
          },
          {
            internalType: "Id[]",
            name: "supplyQueue",
            type: "bytes32[]",
          },
          {
            internalType: "Id[]",
            name: "withdrawQueue",
            type: "bytes32[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "admin",
                type: "address",
              },
              { internalType: "uint256", name: "fee", type: "uint256" },
              {
                internalType: "uint256",
                name: "accruedFee",
                type: "uint256",
              },
            ],
            internalType: "struct PublicAllocatorConfig",
            name: "publicAllocatorConfig",
            type: "tuple",
          },
        ],
        internalType: "struct VaultResponse",
        name: "res",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export const code =
  "0x6080806040523460155761139e908161001a8239f35b5f80fdfe60806040526004361015610011575f80fd5b5f3560e01c63f6f030ce14610024575f80fd5b3461098e57604036600319011261098e576004356001600160a01b038116810361098e576024356001600160a01b038116810361098e576102a060405260405161006d816111ac565b5f815260606020820152606060408201525f60608201525f6080820152604051610096816111c7565b5f815260606020820152606060408201525f60608201525f60808201525f60a0820152606060c082015260a08201526080525f6020608001525f6040608001525f6060608001525f60808001526040516100ef816111fd565b5f808252602082015261012052604051610108816111fd565b5f80825260208201819052610140919091526101608190526101808190526101a08190526101c08190526101e08190526102008190526102205260606102408190526102605260405161015a816111e2565b5f81525f60208201525f6040820152610200608001526040516338d52e0f60e01b815260208160048160018060a01b0387165afa90811561099a575f91611107575b506040516395d89b4160e01b81525f816004816001600160a01b0388165afa90811561099a575f916110ed575b506040516306fdde0360e01b81525f816004816001600160a01b0389165afa90811561099a575f916110cb575b5060405163313ce56760e01b81526020816004816001600160a01b038a165afa90811561099a575f916110ac575b50604051632ba9c2b360e21b8152916020836004816001600160a01b038b165afa92831561099a575f9361107b575b506040516342580cb760e11b8152935f856004816001600160a01b038c165afa94851561099a575f95610f20575b509160ff939291849260405197610297896111ac565b60018060a01b031688526020880152604087015216606085015216608083015260a0820152608052604051638da5cb5b60e01b815260208160048160018060a01b0387165afa90811561099a575f91610ee6575b506001600160a01b0390811660a05260405163e66f53b760e01b8152906020908290600490829087165afa90811561099a575f91610eac575b506001600160a01b0390811660c052604051630229549960e51b8152906020908290600490829087165afa90811561099a575f91610e72575b506001600160a01b0390811660e0526040516334cc866d60e21b8152906020908290600490829087165afa90811561099a575f91610e40575b506101005260408051637cc4d9a160e01b815290816004816001600160a01b0387165afa90811561099a575f91610ddd575b506101205260408051633b1618dd60e11b815290816004816001600160a01b0387165afa90811561099a575f91610d84575b5061014052604051631c61872f60e31b81526020816004816001600160a01b0387165afa90811561099a575f91610d4a575b506001600160a01b039081166101605260405163ddca3f4360e01b8152906020908290600490829087165afa801561099a575f90610d01575b6001600160601b0316610180525060405163011a412160e61b81526020816004816001600160a01b0387165afa90811561099a575f91610cc7575b506001600160a01b039081166101a05260405163388af5b560e01b8152906020908290600490829087165afa90811561099a575f91610c8d575b506001600160a01b039081166101c0526040516318160ddd60e01b8152906020908290600490829087165afa90811561099a575f91610c5b575b506101e0526040516278744560e21b81526020816004816001600160a01b0387165afa90811561099a575f91610c29575b506102005260405163568efc0760e01b81526020816004816001600160a01b0387165afa90811561099a575f91610bf7575b5061022052604051630a17b31360e41b81526020816004816001600160a01b0387165afa90811561099a575f91610bc5575b506105b38161130e565b610240525f5b818110610b445750506040516333f91ebb60e01b81526020816004816001600160a01b0387165afa90811561099a575f91610b12575b506105f98161130e565b610260525f5b818110610a915750506001600160a01b038116151580610a16575b610881575b505060405160208152806080516102a0602083015260018060a01b038151166102c083015260a061067c610664602084015160c06102e0870152610380860190611155565b60408401518582036102bf1901610300870152611155565b916060810151610320850152608081015161034085015201516102bf198383030161036084015260ff60f81b815116825260c06106dd6106cb602084015160e0602087015260e0860190611155565b60408401518582036040870152611155565b916060810151606085015260018060a01b03608082015116608085015260a081015160a085015201519160c0818303910152602080835192838152019201905f5b81811061086857505060a080516001600160a01b03908116604086015260c080518216606087015260e0805183166080880152610100805194880194909452610120805180516001600160c01b0316938901939093526020928301516001600160401b0390811692890192909252610140805180518616968a01969096529490920151169086015261016080518216928601929092526101808051928601929092526101a080518216928601929092526101c08051909116918501919091526101e080519185019190915261020080519185019190915261022080519185019190915261024051848403601f19019185019190915261083892610822925090611179565b61026051838203601f1901610240850152611179565b610280805180516001600160a01b0316610260850152602081015191840191909152604001516102a08301520390f35b825184528594506020938401939092019160010161071e565b604051630c7508df60e31b81526001600160a01b0380841660048301529092906020908490602490829086165afa92831561099a575f936109da575b50604051636fcca69b60e01b81526001600160a01b0380831660048301529091906020908390602490829087165afa91821561099a575f926109a5575b506040516348d88a5960e11b81526001600160a01b0391821660048201529260209184916024918391165afa91821561099a575f92610962575b5060405192610942846111e2565b6001600160a01b0316835260208301526040820152610280525f8061061f565b9091506020813d602011610992575b8161097e60209383611218565b8101031261098e5751905f610934565b5f80fd5b3d9150610971565b6040513d5f823e3d90fd5b9091506020813d6020116109d2575b816109c160209383611218565b8101031261098e57519060206108fa565b3d91506109b4565b9092506020813d602011610a0e575b816109f660209383611218565b8101031261098e57610a0790611239565b915f6108bd565b3d91506109e9565b506040516326f6f90760e11b81526001600160a01b0382811660048301526020908290602490829087165afa90811561099a575f91610a56575b5061061a565b90506020813d602011610a89575b81610a7160209383611218565b8101031261098e5751801515810361098e575f610a50565b3d9150610a64565b6040516362518ddf60e01b815260048101829052906020826024816001600160a01b0389165afa801561099a575f90610ae0575b60019250610ad9826101e060800151611340565b52016105ff565b506020823d8211610b0a575b81610af960209383611218565b8101031261098e5760019151610ac5565b3d9150610aec565b90506020813d602011610b3c575b81610b2d60209383611218565b8101031261098e57515f6105ef565b3d9150610b20565b60405163f7d1852160e01b815260048101829052906020826024816001600160a01b0389165afa801561099a575f90610b93575b60019250610b8c826101c060800151611340565b52016105b9565b506020823d8211610bbd575b81610bac60209383611218565b8101031261098e5760019151610b78565b3d9150610b9f565b90506020813d602011610bef575b81610be060209383611218565b8101031261098e57515f6105a9565b3d9150610bd3565b90506020813d602011610c21575b81610c1260209383611218565b8101031261098e57515f610577565b3d9150610c05565b90506020813d602011610c53575b81610c4460209383611218565b8101031261098e57515f610545565b3d9150610c37565b90506020813d602011610c85575b81610c7660209383611218565b8101031261098e57515f610514565b3d9150610c69565b90506020813d602011610cbf575b81610ca860209383611218565b8101031261098e57610cb990611239565b5f6104da565b3d9150610c9b565b90506020813d602011610cf9575b81610ce260209383611218565b8101031261098e57610cf390611239565b5f6104a0565b3d9150610cd5565b506020813d602011610d42575b81610d1b60209383611218565b8101031261098e57516001600160601b038116810361098e576001600160601b0390610465565b3d9150610d0e565b90506020813d602011610d7c575b81610d6560209383611218565b8101031261098e57610d7690611239565b5f61042c565b3d9150610d58565b90506040813d604011610dd5575b81610d9f60409383611218565b8101031261098e57610dca602060405192610db9846111fd565b610dc281611239565b8452016112fa565b60208201525f6103fa565b3d9150610d92565b90506040813d604011610e38575b81610df860409383611218565b8101031261098e5760405190610e0d826111fd565b80516001600160c01b038116810361098e578252610e2d906020016112fa565b60208201525f6103c8565b3d9150610deb565b90506020813d602011610e6a575b81610e5b60209383611218565b8101031261098e57515f610396565b3d9150610e4e565b90506020813d602011610ea4575b81610e8d60209383611218565b8101031261098e57610e9e90611239565b5f61035d565b3d9150610e80565b90506020813d602011610ede575b81610ec760209383611218565b8101031261098e57610ed890611239565b5f610324565b3d9150610eba565b90506020813d602011610f18575b81610f0160209383611218565b8101031261098e57610f1290611239565b5f6102eb565b3d9150610ef4565b9094503d805f833e610f328183611218565b81019060208183031261098e578051906001600160401b03821161098e570160e08183031261098e5760405191610f68836111c7565b81516001600160f81b03198116810361098e57835260208201516001600160401b03811161098e5781610f9c91840161124d565b602084015260408201516001600160401b03811161098e5781610fc091840161124d565b604084015260608201516060840152610fdb60808301611239565b608084015260a082015160a084015260c0820151906001600160401b03821161098e5780601f83850101121561098e578183015191611019836112e3565b936110276040519586611218565b838552602085019260208560051b84840101011161098e5790602081830101925b60208560051b8385010101841061106b57505050505060c08201529360ff610281565b8351815260209384019301611048565b61109e91935060203d6020116110a5575b6110968183611218565b8101906112ca565b915f610253565b503d61108c565b6110c5915060203d6020116110a5576110968183611218565b5f610224565b6110e791503d805f833e6110df8183611218565b8101906112a2565b5f6101f6565b61110191503d805f833e6110df8183611218565b5f6101c9565b90506020813d602011611139575b8161112260209383611218565b8101031261098e5761113390611239565b5f61019c565b3d9150611115565b634e487b7160e01b5f52604160045260245ffd5b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b90602080835192838152019201905f5b8181106111965750505090565b8251845260209384019390920191600101611189565b60c081019081106001600160401b0382111761114157604052565b60e081019081106001600160401b0382111761114157604052565b606081019081106001600160401b0382111761114157604052565b604081019081106001600160401b0382111761114157604052565b90601f801991011681019081106001600160401b0382111761114157604052565b51906001600160a01b038216820361098e57565b81601f8201121561098e578051906001600160401b0382116111415760405192611281601f8401601f191660200185611218565b8284526020838301011161098e57815f9260208093018386015e8301015290565b9060208282031261098e5781516001600160401b03811161098e576112c7920161124d565b90565b9081602091031261098e575160ff8116810361098e5790565b6001600160401b0381116111415760051b60200190565b51906001600160401b038216820361098e57565b90611318826112e3565b6113256040519182611218565b8281528092611336601f19916112e3565b0190602036910137565b80518210156113545760209160051b010190565b634e487b7160e01b5f52603260045260245ffdfea264697066735822122023293b2df005682d3a7c99045b7086cbb4e62e771a73844d3f8f7c0947c627a964736f6c634300081b0033";
